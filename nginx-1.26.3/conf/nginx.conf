#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;  # 每个 worker 进程的最大连接数
}

http {
    include       mime.types;  # 包含 mime 类型文件
    default_type  application/octet-stream;  # 默认 MIME 类型

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;  # 访问日志格式

    sendfile        on;  # 启用高效文件传输
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;  # 设置连接保持的超时时间

    #gzip  on;

    server {
        listen       81;  # 监听 81 端口
        server_name  localhost;  # 设置服务器名称

        #charset koi8-r;

        #access_log  logs/host.access.log  main;  # 设置访问日志文件

        location / {
            root   html;  # 静态文件根目录
            index  index.html index.htm;  # 默认页面
        }

        #error_page  404              /404.html;  # 设置 404 错误页面

        # 重定向服务器错误页面到静态页面 /50x.html
        #
        error_page   500 502 503 504  /50x.html;  # 服务器错误时跳转至 50x.html
        location = /50x.html {
            root   html;  # 错误页面的根目录
        }

        # 将 PHP 脚本代理到监听在 127.0.0.1:80 的 Apache 上
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # 将 PHP 脚本传递到监听在 127.0.0.1:9000 的 FastCGI 服务器
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # 拒绝访问 .htaccess 文件，如果 Apache 的文档根目录与 Nginx 的文档根目录相同
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # 另一个虚拟主机，使用 IP、名称和端口混合配置
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS 服务器配置
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
